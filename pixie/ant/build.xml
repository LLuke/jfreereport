<!--
<!DOCTYPE project PUBLIC "-//ANT//DTD project//EN" "ant.dtd">
-->
<!-- An ANT build file for Pixie                                     -->
<!-- Based on a script written by David Gilbert                      -->
<!--                                                                 -->
<!-- To run this script, you need to make sure the libraries used by -->
<!-- Pixie are copied to the ../lib directory (or edit the           -->
<!-- init-general task to point to the appropriate jar files).       -->
<!--                                                                 -->
<!-- This script will create temporary directories ../build and      -->
<!-- ../distribution, as working areas.  A ../javadoc directory will -->
<!-- be created for the Javadoc HTML pages.                          -->
<!--                                                                 -->
<!-- If you have comments about this script, please post a message   -->
<!-- in the Pixie forum.                                             -->

<project name="pixie" default="all" basedir="..">

  <import file="build-lib.xml"/>

  <target name="init">

    <dirname property="antfile.dir" file="${ant.file}"/>
    <property file="${antfile.dir}/build.properties"/>

    <isClassAndFileAvailable class-name="org.jfree.JCommon"
                             property-name="lib.jcommon.present"
                             file-name="${libdir}/${jcommon-jar-file}"/>

    <fail unless="lib.jcommon.present"/>
  </target>

  <target name="compile" depends="init">
    <echo>Building Pixie</echo>

    <build-all source-dir="source"
               target-jar="${pixie-jar-file}">
      <all-classpath>
        <pathelement location="${libdir}/${jcommon-jar-file}"/>
      </all-classpath>
      <all-resources>
        <include name="*.properties"/>
      </all-resources>
    </build-all>

  </target>

  <!-- Generate the Pixie JavaDoc HTML pages -->
  <!-- Dont expect too much yet, as most classes are still undocumented -->
  <target name="javadoc" depends="init">
    <delete dir="javadoc"/>
    <mkdir dir="javadoc"/>
    <javadoc destdir="javadoc"
      windowtitle="Pixie Library"
      overview="source/overview.html">
      <packageset dir="source" defaultexcludes="yes">
        <include name="org/jfree/pixie/**"/>
      </packageset>
      <classpath>
        <pathelement location="${libdir}/${jcommon-jar-file}"/>
      </classpath>
    </javadoc>
  </target>

  <target name="fill-dist-dir">

    <!-- copy across README -->
    <copy file="README.txt"
      tofile="${dist-dir}/README.txt" failonerror="false"/>

    <!-- copy across LICENCE -->
    <copy file="licence-LGPL.txt"
      tofile="${dist-dir}/licence-LGPL.txt"/>

    <!-- copy across ChangeLog -->
    <copy file="ChangeLog" tofile="${dist-dir}/ChangeLog"/>

    <!-- copy across runtime jar file -->
    <copy file="${pixie-jar-file}" tofile="${dist-dir}/${pixie-jar-file}"/>

    <!-- copy across source files -->
    <copy todir="distribution/source">
      <fileset dir="source"/>
    </copy>

    <!-- copy across lib files -->
    <copy todir="distribution/lib">
      <fileset dir="lib"/>
    </copy>

    <!-- copy across ant build file (this file) -->
    <copy file="ant/build.xml"
      tofile="${dist-dir}/ant/build.xml" failonerror="false"/>
    <copy file="ant/build-lib.xml"
      tofile="${dist-dir}/ant/build-lib.xml" failonerror="false"/>

    <copy file="ant/build.properties"
      tofile="${dist-dir}/ant/build.properties"/>
  </target>

  <!-- Make .tar.gz distribution for Pixie -->
  <!-- the war file is not included, as it can be rebuild easily and is also available -->
  <!-- as an separate download -->
  <target name="make-targz" depends="compile">

    <!-- make a temporary distribution directory -->
    <mkdir dir="distribution"/>

    <!-- copy across README -->
    <copy file="README" tofile="distribution/README"/>

    <!-- copy across Licences -->
    <copy file="licence-LGPL.txt" tofile="distribution/Licence"/>

    <!-- copy across ChangeLog -->
    <copy file="ChangeLog" tofile="distribution/ChangeLog"/>

    <!-- copy across runtime jar file -->
    <copy file="${pixie-jar-file}" tofile="distribution/${pixie-jar-file}"/>

    <!-- copy across source files -->
    <copy todir="distribution/source">
      <fileset dir="source"/>
    </copy>

    <!-- copy across lib files -->
    <copy todir="distribution/lib">
      <fileset dir="lib"/>
    </copy>

    <!-- copy across ant build file (this file) -->
    <copy todir="distribution/ant">
      <fileset dir="ant"/>
    </copy>

    <!-- convert end-of-line characters in text files -->
    <fixcrlf srcdir="distribution/source"
      eol="lf" eof="remove"
      excludes="**/*.jpg **/*.gif **/*.png **/*.wmf"/>
    <fixcrlf srcdir="distribution/ant"
      eol="lf" eof="remove"/>

    <!-- make the tar.gz file -->
    <tar tarfile="${pixie.name}-${pixie.version}.tar">
      <tarfileset dir="distribution"
        prefix="${pixie.name}-${pixie.version}"/>
    </tar>
    <gzip zipfile="${pixie.name}-${pixie.version}.tar.gz"
      src="${pixie.name}-${pixie.version}.tar"/>
    <delete file="${pixie.name}-${pixie.version}.tar"/>

    <!-- delete the temporary distribution directory -->
    <delete dir="distribution"/>

  </target>

  <target name="maven-bundle" depends="compile" >
    <!-- make a temporary distribution directory -->
    <mkdir dir="distribution"/>
    <!-- copy across Licences -->
    <copy file="licence-LGPL.txt" tofile="distribution/LICENSE.txt"/>
    <copy file="maven-pixie-project.xml" tofile="distribution/project.xml"/>
    <copy file="maven-pixie-project.xml" tofile="distribution/project.xml"/>
    <copy file="${pixie-jar-file}" tofile="distribution/${pixie-jar-file}"/>

    <!-- make the jar -->
    <jar jarfile="${pixie-bundle-file}" basedir="distribution"/>

    <!-- delete the temporary distribution directory -->
    <delete dir="distribution"/>
  </target>

  <target name="all" depends="init, compile, javadoc, make-zip, make-targz, maven-bundle"/>
</project>

