<!-- An ANT build file for Pixie -->

<!-- Based on a script written by David Gilbert. -->
<!-- 12-Nov-2002 -->

<!-- This script will create temporary directories ../build and -->
<!-- ../distribution, as working areas.  A ../javadoc directory will -->
<!-- be created for the Javadoc HTML pages. -->

<!-- If you have comments about this script, please post a message -->
<!-- in the JFreeReport forum. -->

<project name="pixie" default="all" basedir=".">

  <!-- Initialisation. -->
  <target name="init" description="Initialise parameters.">
    <tstamp/>
    <!-- BaseDirectory is different for either cvs target and build target -->
    <!-- base dir is set elsewhere and cannot be redefined :( -->
    <property name="projectdir" value=".."/>
    <property name="builddir" value="${projectdir}/build"/>
    <property name="libdir" value="${projectdir}/lib"/>
    <property name="JCommon-jar" value="jcommon-0.8.1.jar"/>

    <path id="build.classpath">
      <pathelement location="${libdir}/${JCommon-jar}"/>
    </path>

    <property name="pixie.name" value="pixie"/>
    <property name="pixie.version" value="0.8.0"/>
  </target>

  <!-- Compile the Pixie classes -->
  <target name="compile" depends="init"
    description="Compile the Pixie source code.">

    <!-- create a temp build directory -->
    <mkdir dir="${projectdir}/build"/>

    <!-- compile the source -->
    <javac srcdir="${projectdir}/source"
      destdir="${projectdir}/build">
      <classpath refid="build.classpath"/>
    </javac>

    <!-- make the jar -->
    <jar jarfile="${projectdir}/${pixie.name}-${pixie.version}.jar"
      basedir="${projectdir}/build"/>

    <!-- delete the temp directory -->
    <delete dir="${projectdir}/build"/>
  </target>

  <!-- Generate the Pixie JavaDoc HTML pages -->
  <target name="javadoc" depends="init">
    <delete dir="${projectdir}/javadoc"/>
    <mkdir dir="${projectdir}/javadoc"/>
    <javadoc destdir="${projectdir}/javadoc"
      windowtitle="Pixie Class Library"
      overview="../source/overview.html">
      <classpath refid="build.classpath"/>
      <packageset dir="${projectdir}/source" defaultexcludes="yes">
        <include name="org/jfree/pixie/**"/>
      </packageset>
    </javadoc>
  </target>

  <!-- Make .zip distribution for Pixie -->
  <target name="make-zip" depends="compile">

    <!-- make a temporary distribution directory -->
    <mkdir dir="${projectdir}/distribution"/>

    <!-- copy across README -->
    <copy file="${projectdir}/README" tofile="${projectdir}/distribution/README"/>

    <!-- copy across ChangeLog -->
    <copy file="${projectdir}/ChangeLog" tofile="${projectdir}/distribution/ChangeLog"/>

    <!-- copy across LICENCE -->
    <copy file="${projectdir}/licence-LGPL.txt" tofile="${projectdir}/distribution/licence-LGPL.txt"/>

    <!-- copy across migration.txt -->
    <copy file="${projectdir}/migration.txt" tofile="${projectdir}/distribution/migration.txt"/>

    <!-- copy across runtime jar file and demo jar file -->
    <copy file="${projectdir}/${pixie.name}-${pixie.version}.jar" tofile="${projectdir}/distribution/${pixie.name}-${pixie.version}.jar"/>

    <!-- copy across source files -->
    <copy todir="${projectdir}/distribution/source">
      <fileset dir="${projectdir}/source"/>
    </copy>

    <!-- copy across resource files -->
    <copy todir="${projectdir}/distribution/resource">
      <fileset dir="${projectdir}/resource"/>
    </copy>

    <!-- copy across lib files -->
    <copy todir="${projectdir}/distribution/lib">
      <fileset dir="${projectdir}/lib"/>
    </copy>

    <!-- copy across ant build file (this file) -->
    <copy todir="${projectdir}/distribution/ant">
      <fileset dir="${projectdir}/ant"/>
    </copy>

    <!-- copy across checkstyle property file -->
    <copy todir="${projectdir}/distribution/checkstyle">
      <fileset dir="${projectdir}/checkstyle"/>
    </copy>

    <!-- convert end-of-line characters in text files -->
    <!-- end of file does not need to be marked, and causes trouble if it is -->
    <fixcrlf srcdir="${projectdir}/distribution/source"
      eol="crlf" eof="remove"
      excludes="**/*.jpg **/*.gif **/*.png **/*.wmf"/>
    <fixcrlf srcdir="${projectdir}/distribution/ant"
      eol="crlf" eof="remove"/>

    <!-- make the zip file -->
    <zip zipfile="${projectdir}/${pixie.name}-${pixie.version}.zip">
      <zipfileset dir="${projectdir}/distribution"
        prefix="${pixie.name}-${pixie.version}"/>
    </zip>

    <!-- delete the temporary distribution directory -->
    <delete dir="${projectdir}/distribution"/>

  </target>

  <!-- Make .tar.gz distribution for Pixie -->
  <target name="make-targz" depends="compile">

    <!-- make a temporary distribution directory -->
    <mkdir dir="${projectdir}/distribution"/>

    <!-- copy across README -->
    <copy file="${projectdir}/README" tofile="${projectdir}/distribution/README"/>

    <!-- copy across ChangeLog -->
    <copy file="${projectdir}/ChangeLog" tofile="${projectdir}/distribution/ChangeLog"/>

    <!-- copy across LICENCE -->
    <copy file="${projectdir}/licence-LGPL.txt" tofile="${projectdir}/distribution/licence-LGPL.txt"/>

    <!-- copy across migration.txt -->
    <copy file="${projectdir}/migration.txt" tofile="${projectdir}/distribution/migration.txt"/>

    <!-- copy across runtime jar file and demo jar file -->
    <copy file="${projectdir}/${pixie.name}-${pixie.version}.jar" tofile="${projectdir}/distribution/${pixie.name}-${pixie.version}.jar"/>

    <!-- copy across source files -->
    <copy todir="${projectdir}/distribution/source">
      <fileset dir="${projectdir}/source"/>
    </copy>

    <!-- copy across resource files (DTD and example PDFs) -->
    <copy todir="${projectdir}/distribution/resource">
      <fileset dir="${projectdir}/resource"/>
    </copy>

    <!-- copy across lib files -->
    <copy todir="${projectdir}/distribution/lib">
      <fileset dir="${projectdir}/lib"/>
    </copy>

    <!-- copy across ant build file (this file) -->
    <copy todir="${projectdir}/distribution/ant">
      <fileset dir="${projectdir}/ant"/>
    </copy>

    <!-- copy across checkstyle property file -->
    <copy todir="${projectdir}/distribution/checkstyle">
      <fileset dir="${projectdir}/checkstyle"/>
    </copy>

    <!-- convert end-of-line characters in text files -->
    <fixcrlf srcdir="${projectdir}/distribution/source"
      eol="lf" eof="remove"
      excludes="**/*.jpg **/*.gif **/*.png **/*.wmf"/>
    <fixcrlf srcdir="${projectdir}/distribution/ant"
      eol="lf" eof="remove"/>

    <!-- make the tar.gz file -->
    <tar tarfile="${projectdir}/${pixie.name}-${pixie.version}.tar">
      <tarfileset dir="${projectdir}/distribution"
        prefix="${pixie.name}-${pixie.version}"/>
    </tar>
    <gzip zipfile="${projectdir}/${pixie.name}-${pixie.version}.tar.gz"
      src="${projectdir}/${pixie.name}-${pixie.version}.tar"/>
    <delete file="${projectdir}/${pixie.name}-${pixie.version}.tar"/>

    <!-- delete the temporary distribution directory -->
    <delete dir="${projectdir}/distribution"/>

  </target>

  <!-- ALL -->
  <target name="all"
    depends="compile,javadoc,make-zip,make-targz"
    description="Compiles Pixie, builds the jar files, generates the Javadoc HTML pages and creates distribution files (.zip and .tar.gz).">
  </target>

  <!-- Read the latest sources from the CVS -->
  <target name="cvs-checkout" description="Retrieves the latest sources from the cvs archive at sourceforge.">
    <cvspass cvsroot=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/jfreereport"
      password=""
      />
    <cvs cvsRoot=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/jfreereport"
      package="pixie"
      compression="true" compressionlevel="5"
      dest="."
      />
  </target>

  <!-- Checkout the sources from sourceforge and rebuild JFreeReport -->
  <!-- Warning: This requires a different basedir -->
  <target name="cvs-rebuild"
    depends="cvs-checkout"
    description="Checks out the sources from sourceforge and rebuilds the sources by using the ant-script within the sources">
    <property name="projectdir" value="."/>
    <ant antfile="ant/build.xml" dir="pixie" target="all"/>
  </target>

</project>
