<!--

<!DOCTYPE project PUBLIC "-//ANT//DTD project//EN" "ant.dtd">

-->

<!-- An ANT build file for JFreeReport -->

<!-- Based on a script written by David Gilbert -->

<!-- To run this script, you need to make sure the libraries used by -->
<!-- JFreeReport are copied to the ../lib directory (or edit the -->
<!-- init-general task to point to the appropriate jar files). -->

<!-- This script will create temporary directories ../build and -->
<!-- ../distribution, as working areas.  A ../javadoc directory will -->
<!-- be created for the Javadoc HTML pages. -->

<!-- If you have comments about this script, please post a message -->
<!-- in the JFreeReport forum. -->

<project name="jfreereport-ext" default="all" basedir="..">

  <!-- Runns some tests, to identify the used JDK implementation -->
  <target name="init">
    <description>Runs tests to retrieve the JDK version</description>

    <dirname property="antfile.dir" file="${ant.file}"/>
    <property file="${antfile.dir}/build.properties"/>

    <available file="${jfreereport-dir}/ant/build.properties" property="jfreereport-base-present"/>
    <fail unless="jfreereport-base-present">
      JFreeReport was not found at the specified location (${jfreereport-dir}).
    </fail>

    <property file="${jfreereport-dir}/ant/build.properties"/>

    <echo>JFreeReport base package version ${jfreereport.version} found.</echo>

    <property file="${antfile.dir}/targets.properties"/>

    <condition property="junit.present">
      <and>
         <available file="${ext.libdir}/${junit-jar-file}"/>
         <available classname="junit.framework.Test">
           <classpath>
              <pathelement location="${ext.libdir}/${junit-jar-file}"/>
           </classpath>
         </available>
      </and>
    </condition>

    <condition property="servlet.present">
      <and>
         <available file="${ext.libdir}/${servlet-jar-file}"/>
         <available classname="javax.servlet.Servlet">
           <classpath>
              <pathelement location="${ext.libdir}/${servlet-jar-file}"/>
           </classpath>
         </available>
      </and>
    </condition>

    <condition property="log4j.present">
      <and>
         <available file="${ext.libdir}/${log4j-jar-file}"/>
         <available classname="org.apache.log4j.Logger">
           <classpath>
              <pathelement location="${ext.libdir}/${log4j-jar-file}"/>
           </classpath>
         </available>
      </and>
    </condition>

    <available classname="java.util.Timer" property="java-1.3.present"/>

    <available classname="java.nio.Buffer" property="java-1.4.present"/>

    <echo>
      Available features:
        Java1.3    : ${java-1.3.present}
        Java1.4    : ${java-1.4.present}
        JUnit      : ${junit.present}
        Log4J      : ${log4j.present}
        Servlets   : ${servlet.present}
    </echo>
  </target>

  <target name="compile" depends="compile-junit,
      compile-demo,
      compile-module-ext-java14config,
      compile-module-ext-java14log,
      compile-module-ext-java14print,
      compile-module-ext-log4jlog"></target>

  <!-- ************************************************************** -->
  <!--                                                                -->
  <!--  JUnit-test cases                                              -->
  <!--                                                                -->
  <!-- ************************************************************** -->

  <target name="compile-junit" depends="init" if="junit.present">
    <echo>Building JUnit tests</echo>

    <!-- create a temp build directory -->
    <mkdir dir="build"/>

    <!-- compile the source -->
    <javac srcdir="source"
      destdir="build" target="${build.target}"
      deprecation="${build.deprecation}" debug="${build.debug}" optimize="${build.optimize}">
      <include name="org/jfree/report/ext/junit/**/*.java"/>
      <classpath>
        <pathelement location="${jfreereport-dir}/${libdir}/${jcommon-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${libdir}/${pixie-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${libdir}/${itext-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${jfreereport-all-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${jfreereport-demo-jar-file}"/>
        <pathelement location="${ext.libdir}/${servlet-jar-file}"/>
        <pathelement location="${ext.libdir}/${junit-jar-file}"/>
      </classpath>
    </javac>

    <!-- include the report definition files -->
    <copy todir="build/org/jfree/report/ext/junit">
      <fileset dir="source/org/jfree/report/ext/junit">
        <include name="**/*.xml"/>
        <include name="**/*.gif"/>
        <include name="**/*.dbf"/>
      </fileset>
    </copy>

    <!-- make the jar -->
    <jar jarfile="${jfreereport-junit-jar-file}"
      basedir="build">
    </jar>

    <!-- delete the temp directory -->
    <delete dir="build"/>
  </target>

  <!-- ************************************************************** -->
  <!--                                                                -->
  <!--  Servlet demo classes                                          -->
  <!--                                                                -->
  <!-- ************************************************************** -->

  <target name="compile-demo" depends="init" if="servlet.present">
    <echo>Building Servlet Demo</echo>

    <!-- create a temp build directory -->
    <mkdir dir="build"/>

    <!-- compile the source -->
    <javac srcdir="source"
      destdir="build" target="${build.target}"
      deprecation="${build.deprecation}" debug="${build.debug}" optimize="${build.optimize}">
      <include name="org/jfree/report/ext/servletdemo/*.java"/>
      <classpath>
        <pathelement location="${jfreereport-dir}/${libdir}/${jcommon-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${jfreereport-all-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${jfreereport-demo-jar-file}"/>
        <pathelement location="${ext.libdir}/${servlet-jar-file}"/>
      </classpath>
    </javac>

    <!-- include the report definition files -->
    <!--
    <copy todir="build/org/jfree/report/ext/servletdemo">
      <fileset dir="source/org/jfree/report/ext/servletdemo">
        <include name="**/*.xml"/>
        <include name="**/*.gif"/>
        <include name="**/*.dbf"/>
      </fileset>
    </copy>
    -->

    <!-- make the jar -->
    <jar jarfile="${jfreereport-servlet-demo-jar-file}"
      basedir="build">
    </jar>

    <!-- delete the temp directory -->
    <delete dir="build"/>
  </target>

  <!-- ************************************************************** -->
  <!--                                                                -->
  <!--  Java 1.4 configstore module                                   -->
  <!--                                                                -->
  <!-- ************************************************************** -->

  <target name="compile-module-ext-java14config" depends="init" if="java-1.4.present">
    <echo>Building Java 1.4 config modules</echo>

    <!-- create a temp build directory -->
    <mkdir dir="build"/>

    <!-- compile the source -->
    <javac srcdir="source"
      destdir="build" target="${build.target}"
      deprecation="${build.deprecation}" debug="${build.debug}" optimize="${build.optimize}">
      <include name="org/jfree/report/ext/modules/java14config/*.java"/>
      <classpath>
        <pathelement location="${jfreereport-dir}/${libdir}/${jcommon-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${jfreereport-all-jar-file}"/>
      </classpath>
    </javac>

    <!-- include the report definition files -->
    <copy todir="build/org/jfree/report/ext/modules/java14config">
      <fileset dir="source/org/jfree/report/ext/modules/java14config">
        <include name="**/*.properties"/>
      </fileset>
    </copy>

    <!-- make the jar -->
    <jar jarfile="${module-ext-java14config-file}"
      basedir="build">
    </jar>

    <!-- delete the temp directory -->
    <delete dir="build"/>
  </target>

  <!-- ************************************************************** -->
  <!--                                                                -->
  <!--  Java 1.4 log module                                           -->
  <!--                                                                -->
  <!-- ************************************************************** -->

  <target name="compile-module-ext-java14log" depends="init" if="java-1.4.present">
    <echo>Building Java 1.4 log modules</echo>

    <!-- create a temp build directory -->
    <mkdir dir="build"/>

    <!-- compile the source -->
    <javac srcdir="source"
      destdir="build" target="${build.target}"
      deprecation="${build.deprecation}" debug="${build.debug}" optimize="${build.optimize}">
      <include name="org/jfree/report/ext/modules/java14log/*.java"/>
      <classpath>
        <pathelement location="${jfreereport-dir}/${libdir}/${jcommon-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${jfreereport-all-jar-file}"/>
      </classpath>
    </javac>

    <!-- include the report definition files -->
    <copy todir="build/org/jfree/report/ext/modules/java14log">
      <fileset dir="source/org/jfree/report/ext/modules/java14log">
        <include name="**/*.properties"/>
      </fileset>
    </copy>

    <!-- make the jar -->
    <jar jarfile="${module-ext-java14log-file}"
      basedir="build">
    </jar>

    <!-- delete the temp directory -->
    <delete dir="build"/>
  </target>

  <!-- ************************************************************** -->
  <!--                                                                -->
  <!--  Java 1.4 printing API module                                  -->
  <!--                                                                -->
  <!-- ************************************************************** -->

  <target name="compile-module-ext-java14print" depends="init" if="java-1.4.present">
    <echo>Building Java 1.4 print modules</echo>

    <!-- create a temp build directory -->
    <mkdir dir="build"/>

    <javac srcdir="source"
      destdir="build" target="${build.target}"
      deprecation="${build.deprecation}" debug="${build.debug}" optimize="${build.optimize}">
      <include name="org/jfree/report/ext/modules/java14print/*.java"/>
      <classpath>
        <pathelement location="${jfreereport-dir}/${libdir}/${jcommon-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${jfreereport-all-jar-file}"/>
      </classpath>
    </javac>

    <!-- include the report definition files -->
    <copy todir="build/org/jfree/report/ext/modules/java14print">
      <fileset dir="source/org/jfree/report/ext/modules/java14print">
        <include name="**/*.properties"/>
      </fileset>
    </copy>

    <!-- make the jar -->
    <jar jarfile="${module-ext-java14print-file}"
      basedir="build">
    </jar>

    <!-- delete the temp directory -->
    <delete dir="build"/>
  </target>

  <!-- ************************************************************** -->
  <!--                                                                -->
  <!--  Apache Log4J logging integration                              -->
  <!--                                                                -->
  <!-- ************************************************************** -->

  <target name="compile-module-ext-log4jlog" depends="init" if="log4j.present">
    <echo>Building Log4J logging modules</echo>

    <!-- create a temp build directory -->
    <mkdir dir="build"/>

    <javac srcdir="source"
      destdir="build" target="${build.target}"
      deprecation="${build.deprecation}" debug="${build.debug}" optimize="${build.optimize}">
      <include name="org/jfree/report/ext/modules/log4jlog/*.java"/>
      <classpath>
        <pathelement location="${jfreereport-dir}/${libdir}/${jcommon-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${jfreereport-all-jar-file}"/>
        <pathelement location="${ext.libdir}/${log4j-jar-file}"/>
      </classpath>
    </javac>

    <!-- include the report definition files -->
    <copy todir="build/org/jfree/report/ext/modules/log4jlog">
      <fileset dir="source/org/jfree/report/ext/modules/log4jlog">
        <include name="**/*.properties"/>
      </fileset>
    </copy>

    <!-- make the jar -->
    <jar jarfile="${module-ext-log4jlog-file}"
      basedir="build">
    </jar>

    <!-- delete the temp directory -->
    <delete dir="build"/>
  </target>

  <!-- Generate the JFreeReport JavaDoc HTML pages -->
  <target name="javadoc" depends="init">
    <delete dir="javadoc"/>
    <mkdir dir="javadoc"/>
    <javadoc destdir="javadoc"
      windowtitle="JFreeReport Extension Class Library"
      overview="../source/overview.html">
      <classpath>
        <pathelement location="${jfreereport-dir}/${libdir}/${jcommon-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${libdir}/${pixie-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${libdir}/${itext-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${jfreereport-all-jar-file}"/>
        <pathelement location="${jfreereport-dir}/${jfreereport-demo-jar-file}"/>
        <pathelement location="${ext.libdir}/${log4j-jar-file}"/>
        <pathelement location="${ext.libdir}/${servlet-jar-file}"/>
        <pathelement location="${ext.libdir}/${junit-jar-file}"/>
      </classpath>
      <packageset dir="source" defaultexcludes="yes">
        <include name="org/jfree/report/ext/**"/>
      </packageset>
    </javadoc>
  </target>



  <!-- Builds the WAR file and copies all required libraries from the JFreeReport base -->
  <!-- and extension projects into the war.                                            -->
  <!-- The BaseProject must be readily build                                           -->
  <target name="build-war" depends="compile" if="servlet.present">
    <mkdir dir="warbuild"/>

    <copy todir="warbuild">
      <fileset dir="webapp">
        <exclude name="**/CVS"/>
      </fileset>
    </copy>

    <copy todir="warbuild/WEB-INF/lib" file="${jfreereport-dir}/${libdir}/${beanshell-jar-file}"/>
    <copy todir="warbuild/WEB-INF/lib" file="${jfreereport-dir}/${libdir}/${jaxp-jar-file}"/>
    <copy todir="warbuild/WEB-INF/lib" file="${jfreereport-dir}/${libdir}/${itext-jar-file}"/>
    <copy todir="warbuild/WEB-INF/lib" file="${jfreereport-dir}/${libdir}/${jcommon-jar-file}"/>
    <copy todir="warbuild/WEB-INF/lib" file="${jfreereport-dir}/${libdir}/${pixie-jar-file}"/>
    <copy todir="warbuild/WEB-INF/lib" file="${jfreereport-dir}/${libdir}/${jakarta-poi-jar-file}"/>
    <copy todir="warbuild/WEB-INF/lib" file="${jfreereport-dir}/${jfreereport-all-jar-file}"/>
    <copy todir="warbuild/WEB-INF/lib" file="${jfreereport-dir}/${jfreereport-demo-jar-file}"/>
    <copy todir="warbuild/WEB-INF/lib" file="${jfreereport-servlet-demo-jar-file}"/>

    <!-- make the jar file -->
    <jar jarfile="${jfreereport.name}-ext-${jfreereport.version}.war"
      basedir="warbuild">
    </jar>

    <!-- remove the temp build area -->
    <delete dir="warbuild"/>

  </target>

  <!-- Make .zip distribution for JFreeReport -->
  <!-- the war file is not included, as it can be rebuild easily and is also available -->
  <!-- as an separate download -->
  <target name="make-zip" depends="compile, build-war">

    <!-- make a temporary distribution directory -->
    <mkdir dir="distribution"/>

    <!-- copy across README -->
    <copy file="README" tofile="distribution/README"/>

    <!-- copy across ChangeLog -->
    <copy file="ChangeLog" tofile="distribution/ChangeLog"/>

    <!-- copy across LICENCE -->
    <copy file="licence-LGPL.txt" tofile="distribution/licence-LGPL.txt"/>

    <!-- copy across runtime jar file -->
    <copy file="${jfreereport-servlet-demo-jar-file}" tofile="distribution/${jfreereport-servlet-demo-jar-file}"/>
    <copy file="${jfreereport-junit-jar-file}" tofile="distribution/${jfreereport-junit-jar-file}"/>
    <copy file="${module-ext-java14config-file}" tofile="distribution/${module-ext-java14config-file}"/>
    <copy file="${module-ext-java14log-file}" tofile="distribution/${module-ext-java14log-file}"/>
    <copy file="${module-ext-java14print-file}" tofile="distribution/${module-ext-java14print-file}"/>
    <copy file="${module-ext-log4jlog-file}" tofile="distribution/${module-ext-log4jlog-file}"/>

    <!-- copy across source files -->
    <copy todir="distribution/source">
      <fileset dir="source"/>
    </copy>

    <!-- copy across web application files -->
    <copy todir="distribution/webapp">
      <fileset dir="webapp"/>
    </copy>

    <!-- copy across lib files -->
    <copy todir="distribution/lib">
      <fileset dir="lib"/>
    </copy>

    <!-- copy across ant build file (this file) -->
    <copy todir="distribution/ant">
      <fileset dir="ant"/>
    </copy>

    <!-- convert end-of-line characters in text files -->
    <!-- end of file does not need to be marked, and causes trouble if it is -->
    <fixcrlf srcdir="distribution/source"
      eol="crlf" eof="remove"
      excludes="**/*.jpg **/*.gif **/*.png **/*.wmf"/>
    <fixcrlf srcdir="distribution/ant"
      eol="crlf" eof="remove"/>

    <!-- make the zip file -->
    <zip zipfile="${jfreereport.name}-ext-${jfreereport.version}.zip">
      <zipfileset dir="distribution"
        prefix="${jfreereport.name}-ext-${jfreereport.version}"/>
    </zip>

    <!-- delete the temporary distribution directory -->
    <delete dir="distribution"/>

  </target>

  <!-- Make .tar.gz distribution for JFreeReport -->
  <!-- the war file is not included, as it can be rebuild easily and is also available -->
  <!-- as an separate download -->
  <target name="make-targz" depends="compile, build-war">

    <!-- make a temporary distribution directory -->
    <mkdir dir="distribution"/>

    <!-- copy across README -->
    <copy file="README" tofile="distribution/README"/>

    <!-- copy across ChangeLog -->
    <copy file="ChangeLog" tofile="distribution/ChangeLog"/>

    <!-- copy across LICENCE -->
    <copy file="licence-LGPL.txt" tofile="distribution/licence-LGPL.txt"/>

    <!-- copy across runtime jar file -->
    <copy file="${jfreereport-servlet-demo-jar-file}" tofile="distribution/${jfreereport-servlet-demo-jar-file}"/>
    <copy file="${jfreereport-junit-jar-file}" tofile="distribution/${jfreereport-junit-jar-file}"/>
    <copy file="${module-ext-java14config-file}" tofile="distribution/${module-ext-java14config-file}"/>
    <copy file="${module-ext-java14log-file}" tofile="distribution/${module-ext-java14log-file}"/>
    <copy file="${module-ext-java14print-file}" tofile="distribution/${module-ext-java14print-file}"/>
    <copy file="${module-ext-log4jlog-file}" tofile="distribution/${module-ext-log4jlog-file}"/>

    <!-- copy across source files -->
    <copy todir="distribution/source">
      <fileset dir="source"/>
    </copy>

    <!-- copy across web application files -->
    <copy todir="distribution/webapp">
      <fileset dir="webapp"/>
    </copy>

    <!-- copy across lib files -->
    <copy todir="distribution/lib">
      <fileset dir="lib"/>
    </copy>

    <!-- copy across ant build file (this file) -->
    <copy todir="distribution/ant">
      <fileset dir="ant"/>
    </copy>

    <!-- convert end-of-line characters in text files -->
    <fixcrlf srcdir="distribution/source"
      eol="lf" eof="remove"
      excludes="**/*.jpg **/*.gif **/*.png **/*.wmf"/>
    <fixcrlf srcdir="distribution/ant"
      eol="lf" eof="remove"/>

    <!-- make the tar.gz file -->
    <tar tarfile="${jfreereport.name}-ext-${jfreereport.version}.tar">
      <tarfileset dir="distribution"
        prefix="${jfreereport.name}-ext-${jfreereport.version}"/>
    </tar>
    <gzip zipfile="${jfreereport.name}-ext-${jfreereport.version}.tar.gz"
      src="${jfreereport.name}-ext-${jfreereport.version}.tar"/>
    <delete file="${jfreereport.name}-ext-${jfreereport.version}.tar"/>

    <!-- delete the temporary distribution directory -->
    <delete dir="distribution"/>

  </target>

  <target name="all" depends="init, compile, javadoc, build-war, make-zip, make-targz"/>
</project>

