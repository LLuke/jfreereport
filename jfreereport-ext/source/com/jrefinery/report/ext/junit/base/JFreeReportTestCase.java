/*
 * File is generated by 'Unit Tests Generator' developed under
 * 'Web Test Tools' project at http://sf.net/projects/wttools/
 * Copyright (C) 2001 "Artur Hefczyc" <kobit@users.sourceforge.net>
 * to all 'Web Test Tools' subprojects.
 *
 * No rigths to files and no responsibility for code generated
 * by this tool are belonged to author of 'unittestsgen' utility.
 *
 * $Id: JFreeReportTestCase.java,v 1.2 2002/07/10 19:22:47 taqua Exp $
 * $Author: taqua $
 * $Date: 2002/07/10 19:22:47 $
 */
package com.jrefinery.report.ext.junit.base;

import com.jrefinery.report.JFreeReport;
import com.jrefinery.report.Group;
import com.jrefinery.report.FunctionCollection;
import com.jrefinery.report.GroupList;
import com.jrefinery.report.ItemBand;
import com.jrefinery.report.PageFooter;
import com.jrefinery.report.PageHeader;
import com.jrefinery.report.ReportFooter;
import com.jrefinery.report.ReportHeader;
import com.jrefinery.report.function.ItemSumFunction;
import com.jrefinery.report.function.FunctionInitializeException;
import junit.framework.Test;
import junit.framework.TestCase;
import junit.framework.TestSuite;

import javax.swing.table.DefaultTableModel;
import java.awt.print.PageFormat;
import java.util.Arrays;

/**
 * File <code>JFreeReportTestCase.java</code> is automaticaly generated by
 * 'unittestsgen' application. Code generator is created for java
 * sources and for 'junit' package by "Artur Hefczyc"
 * <kobit@users.sourceforge.net><br/>
 * You should fulfil test methods with proper code for testing
 * purpose. All methods where you should put your code are below and
 * their names starts with 'test'.<br/>
 * You can run unit tests in many ways, however prefered are:
 * <ul>
 *   <li>Run tests for one class only, for example for this class you
 *       can run tests with command:
 *     <pre>
 *       java -cp "jar/thisjarfile.jar;lib/junit.jar" com.jrefinery.report.JFreeReportTestCase
 *     </pre>
 *   </li>
 *   <li>Run tests for all classes in one command call. Code generator
 *       creates also <code>com.jrefinery.report.ext.junit.TestAll.class</code> which runs all
 *       available tests:
 *     <pre>
 *       java -cp "jar/thisjarfile.jar;lib/junit.jar" com.jrefinery.report.ext.junit.TestAll
 *     </pre>
 *   </li>
 *   <li>But the most prefered way is to run all tests from
 *     <em>Ant</em> just after compilation process finished.<br/>
 *     To do it. You need:
 *     <ol>
 *       <li>Ant package from
 *         <a href="http://jakarta.apache.org/">Ant</a>
 *       </li>
 *       <li>JUnit package from
 *         <a href="http://www.junit.org/">JUnit</a>
 *       </li>
 *       <li>Put some code in your <code>build.xml</code> file
 *         to tell Ant how to test your package. Sample code for
 *         Ant's <code>build.xml</code> you can find in created file:
 *         <code>sample-junit-build.xml</code>. And remember to have
 *         <code>junit.jar</code> in CLASSPATH <b>before</b> you run Ant.
 *         To generate reports by ant you must have <code>xalan.jar</code>
 *         in your <code>ANT_HOME/lib/</code> directory.
 *       </li>
 *     </ol>
 *   </li>
 * </ul>
 */
public class JFreeReportTestCase extends TestCase
{
  /**
   * Instance of tested class.
   */
  protected JFreeReport varJFreeReport;

  /**
   * Public constructor for creating testing class.
   */
  public JFreeReportTestCase (String name)
  {
    super (name);
  } // end of JFreeReportTestCase(String name)

  /**
   * This main method is used for run tests for this class only
   * from command line.
   */
  public static void main (String[] args)
  {
    junit.textui.TestRunner.run (suite ());
  } // end of main(Stringp[] args)

  /**
   * This method is called every time before particular test execution.
   * It creates new instance of tested class and it can perform some more
   * actions which are necessary for performs tests.
   */
  protected void setUp ()
  {
    varJFreeReport = new JFreeReport ();
  } // end of setUp()

  /**
   * Returns all tests which should be performed for testing class.
   * By default it returns only name of testing class. Instance of this
   * is then created with its constructor.
   */
  public static Test suite ()
  {
    return new TestSuite (JFreeReportTestCase.class);
  } // end of suite()

  /**
   * for classes which doesn't contain any methods here is one additional
   * method for performing test on such classes.
   */
  public void testCorrectConstruction ()
  {
    varJFreeReport = new JFreeReport ();
    assertNotNull (varJFreeReport.getDefaultPageFormat ());
    assertNotNull (varJFreeReport.getFunctions ());
    assertNotNull (varJFreeReport.getGroup (0));
    assertTrue (varJFreeReport.getGroupCount () != 0);
    assertNotNull (varJFreeReport.getGroups ());
    assertNotNull (varJFreeReport.getItemBand ());
    assertNotNull (varJFreeReport.getPageFooter ());
    assertNotNull (varJFreeReport.getPageHeader ());
    assertNotNull (varJFreeReport.getReportFooter ());
    assertNotNull (varJFreeReport.getReportHeader ());
    assertNotNull (varJFreeReport.getProperties ());
  }

  /**
   * Method for testing how works original method:
   * void addFunction(com.jrefinery.report.function.Function)
   * from tested class
   */
  public void testAddFunction555184817 () throws Exception
  {

    try
    {
      varJFreeReport.addFunction(null);
      assertTrue(false);
    }
    catch (NullPointerException npe)
    {
    }

    try
    {
      // Null-Name must crash!
      varJFreeReport.addFunction(new ItemSumFunction());
      assertTrue(false);
    }
    catch (NullPointerException npe)
    {
    }

    try
    {
      varJFreeReport.addFunction(new ItemSumFunction ("named"));
      assertTrue(false);
    }
    catch (FunctionInitializeException fe)
    {
    }

    ItemSumFunction is = new ItemSumFunction();
    is.setField("field");
    is.setGroup("group");
    is.setName("name");

    varJFreeReport.addFunction(is);
  } // end of testAddFunction555184817(com.jrefinery.report.function.Function)

  /**
   * Method for testing how works original method:
   * void addGroup(com.jrefinery.report.Group)
   * from tested class
   */
  public void testAddGroup412552258 ()
  {

    try
    {
      varJFreeReport.addGroup(null);
      assertTrue(false);
    }
    catch (NullPointerException n)
    {
    }

    varJFreeReport.addGroup(new Group ());

  } // end of testAddGroup412552258(com.jrefinery.report.Group)

  /**
   * Method for testing how works original method:
   * javax.swing.table.TableModel getData()
   * from tested class
   */
  public void testGetData ()
  {

    DefaultTableModel model = new DefaultTableModel();

    varJFreeReport.setData (model);
    assertEquals (model, varJFreeReport.getData ());
    try
    {
      varJFreeReport.setData ((javax.swing.table.TableModel) null);
      assertTrue(false);
    }
    catch (NullPointerException npe)
    {
    }

  } // end of testGetData()

  /**
   * Method for testing how works original method:
   * java.awt.print.PageFormat getDefaultPageFormat()
   * from tested class
   */
  public void testGetDefaultPageFormat ()
  {

    // set Default Format from PrintJob
    varJFreeReport.setDefaultPageFormat ((java.awt.print.PageFormat) null);

    PageFormat format = new PageFormat();
    varJFreeReport.setDefaultPageFormat (format);
    assertEquals (format, varJFreeReport.getDefaultPageFormat ());

  } // end of testGetDefaultPageFormat()

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.FunctionCollection getFunctions()
   * from tested class
   */
  public void testGetFunctions ()
  {

    try
    {
      varJFreeReport.setFunctions ((com.jrefinery.report.FunctionCollection) null);
      assertTrue(false);
    }
    catch (NullPointerException npe)
    {
    }
    FunctionCollection c = new FunctionCollection();
    varJFreeReport.setFunctions (c);
    assertEquals (c, varJFreeReport.getFunctions ());

  } // end of testGetFunctions()

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.Group getGroup(int)
   * from tested class
   */
  public void testGetGroup104431 ()
  {
    JFreeReport varJFreeReport = new JFreeReport();
    assertNotNull(varJFreeReport.getGroup(0));

    // DefaultGroup is always the first group in list (0 fields, the less specificst group posible)
    Group g = varJFreeReport.getGroup(0);

    Group g2 = new Group();
    g2.setFields(Arrays.asList(new String[] {"field1", "field2"}));
    varJFreeReport.addGroup(g2);

    assertEquals(g, varJFreeReport.getGroup(0));
    assertEquals(g2, varJFreeReport.getGroup(1));
  } // end of testGetGroup104431(int)

  /**
   * Method for testing how works original method:
   * int getGroupCount()
   * from tested class
   */
  public void testGetGroupCount ()
  {
    JFreeReport varJFreeReport = new JFreeReport();
    GroupList gl = new GroupList();
    varJFreeReport.setGroups (gl);
    assertTrue(varJFreeReport.getGroupCount() == 1);

    Group g = new Group();
    g.setFields(Arrays.asList(new String[] {"field1", "field2"}));
    gl.add(g);

    assertTrue("Separated GroupList from Internal GroupStorage", varJFreeReport.getGroupCount() == 1);
    varJFreeReport.addGroup(g);
    assertTrue("Add Group", varJFreeReport.getGroupCount() == 2);
  } // end of testGetGroupCount()

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.GroupList getGroups()
   * from tested class
   */
  public void testGetGroups ()
  {

    try
    {
      varJFreeReport.setGroups ((com.jrefinery.report.GroupList) null);
      assertTrue("NullPointer", false);
    }
    catch (NullPointerException npe)
    {
    }
    GroupList gl = new GroupList();
    varJFreeReport.setGroups (gl);

    // no getGroups () assertEquals, as the list is copied and a default group is added.

  } // end of testGetGroups()

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.ItemBand getItemBand()
   * from tested class
   */
  public void testGetItemBand ()
  {

    try
    {
      varJFreeReport.setItemBand ((com.jrefinery.report.ItemBand) null);
      assertTrue("NullPointer", false);
    }
    catch (NullPointerException npe)
    {
    }
    ItemBand it = new ItemBand ();
    varJFreeReport.setItemBand (it);
    assertEquals (it, varJFreeReport.getItemBand ());

  } // end of testGetItemBand()

  /**
   * Method for testing how works original method:
   * java.lang.String getName()
   * from tested class
   */
  public void testGetName ()
  {

    varJFreeReport.setName ((String) null);
    assertEquals ("null" , varJFreeReport.getName ());
    varJFreeReport.setName ((String) "");
    assertEquals ((String) "", varJFreeReport.getName ());
    varJFreeReport.setName ((String) "\u0000");
    assertEquals ((String) "\u0000", varJFreeReport.getName ());
    varJFreeReport.setName ((String) " ");
    assertEquals ((String) " ", varJFreeReport.getName ());
    varJFreeReport.setName ((String) "\n");
    assertEquals ((String) "\n", varJFreeReport.getName ());

  } // end of testGetName()

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.PageFooter getPageFooter()
   * from tested class
   */
  public void testGetPageFooter ()
  {

    try
    {
      varJFreeReport.setPageFooter ((com.jrefinery.report.PageFooter) null);
      assertTrue("NullPointer", false);
    }
    catch (NullPointerException npe)
    {
    }
    PageFooter fo = new PageFooter();
    varJFreeReport.setPageFooter (fo);
    assertEquals (fo, varJFreeReport.getPageFooter ());

  } // end of testGetPageFooter()

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.PageHeader getPageHeader()
   * from tested class
   */
  public void testGetPageHeader ()
  {

    try
    {
      varJFreeReport.setPageHeader(null);
      assertTrue("NullPointer", false);
    }
    catch (NullPointerException npe)
    {
    }
    PageHeader fo = new PageHeader();
    varJFreeReport.setPageHeader(fo);
    assertEquals (fo, varJFreeReport.getPageHeader());

  } // end of testGetPageHeader()

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.util.ReportProperties getProperties()
   * from tested class
   */
  public void testGetProperties ()
  {
    assertNotNull(varJFreeReport.getProperties());

  } // end of testGetProperties()

  /**
   * Method for testing how works original method:
   * java.lang.Object getProperty(java.lang.String)
   * from tested class
   */
  public void testGetProperty1195259493 ()
  {
    try
    {
      varJFreeReport.setProperty(null, null);
      assertTrue("NullName", false);
    }
    catch (NullPointerException p)
    {
    }

    try
    {
      varJFreeReport.getProperty(null);
      assertTrue("NullName", false);
    }
    catch (NullPointerException p)
    {
    }

    String propName = "test";
    varJFreeReport.setProperty(propName, "JFreeReport");
    assertEquals(varJFreeReport.getProperty(propName), "JFreeReport");
    varJFreeReport.setProperty(propName, null);
    assertEquals(varJFreeReport.getProperty(propName), null);

  } // end of testGetProperty1195259493(java.lang.String)

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.ReportFooter getReportFooter()
   * from tested class
   */
  public void testGetReportFooter ()
  {

    try
    {
      varJFreeReport.setReportFooter(null);
      assertTrue("NullPointer", false);
    }
    catch (NullPointerException npe)
    {
    }
    ReportFooter fo = new ReportFooter();
    varJFreeReport.setReportFooter(fo);
    assertEquals (fo, varJFreeReport.getReportFooter());

  } // end of testGetReportFooter()

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.ReportHeader getReportHeader()
   * from tested class
   */
  public void testGetReportHeader ()
  {

    try
    {
      varJFreeReport.setReportHeader(null);
      assertTrue("NullPointer", false);
    }
    catch (NullPointerException npe)
    {
    }
    ReportHeader fo = new ReportHeader();
    varJFreeReport.setReportHeader(fo);
    assertEquals (fo, varJFreeReport.getReportHeader());

  } // end of testGetReportHeader()

  /**
   * Method for testing how works original method:
   * boolean isLastItemInHigherGroups(int, int)
   * from tested class
   */
  public void testIsLastItemInHigherGroups104431104431 ()
  {

  } // end of testIsLastItemInHigherGroups104431104431(int, int)

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.ReportState processPage( ... )
   * from tested class
   */
  public void testProcessPage32060089178708140864711720 ()
  {

    assertTrue ("Warning! This new test method with no real test code inside.", false);

  } // end of testProcessPage32060089178708140864711720( ... )

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.ReportState processReport( ... )
   * from tested class
   */
  public void testProcessReport320600891 ()
  {

    assertTrue ("Warning! This new test method with no real test code inside.", false);

  } // end of testProcessReport320600891( ... )

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.ReportStateList repaginate( ... )
   * from tested class
   */
  public void testRepaginate320600891787081408 ()
  {

    assertTrue ("Warning! This new test method with no real test code inside.", false);

  } // end of testRepaginate320600891787081408( ... )


} // end of JFreeReportTestCase
