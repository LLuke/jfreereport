/*
 * File is generated by 'Unit Tests Generator' developed under
 * 'Web Test Tools' project at http://sf.net/projects/wttools/
 * Copyright (C) 2001 "Artur Hefczyc" <kobit@users.sourceforge.net>
 * to all 'Web Test Tools' subprojects.
 *
 * No rigths to files and no responsibility for code generated
 * by this tool are belonged to author of 'unittestsgen' utility.
 *
 * $Id: ReportProcessorTestCase.java,v 1.1 2002/07/08 22:10:35 taqua Exp $
 * $Author: taqua $
 * $Date: 2002/07/08 22:10:35 $
 */
package com.jrefinery.report.ext.junit.base;

import com.jrefinery.report.GroupFooter;
import com.jrefinery.report.GroupHeader;
import com.jrefinery.report.ItemBand;
import com.jrefinery.report.PageFooter;
import com.jrefinery.report.PageHeader;
import com.jrefinery.report.ReportFooter;
import com.jrefinery.report.ReportHeader;
import com.jrefinery.report.ReportProcessor;
import com.jrefinery.report.ext.junit.JunitTestLib;
import com.jrefinery.report.targets.G2OutputTarget;
import com.jrefinery.report.targets.OutputTarget;
import junit.framework.Test;
import junit.framework.TestCase;
import junit.framework.TestSuite;

import java.awt.print.PageFormat;

/**
 * File <code>ReportProcessorTestCase.java</code> is automaticaly generated by
 * 'unittestsgen' application. Code generator is created for java
 * sources and for 'junit' package by "Artur Hefczyc"
 * <kobit@users.sourceforge.net><br/>
 * You should fulfil test methods with proper code for testing
 * purpose. All methods where you should put your code are below and
 * their names starts with 'test'.<br/>
 * You can run unit tests in many ways, however prefered are:
 * <ul>
 *   <li>Run tests for one class only, for example for this class you
 *       can run tests with command:
 *     <pre>
 *       java -cp "jar/thisjarfile.jar;lib/junit.jar" com.jrefinery.report.ReportProcessorTestCase
 *     </pre>
 *   </li>
 *   <li>Run tests for all classes in one command call. Code generator
 *       creates also <code>com.jrefinery.report.ext.junit.TestAll.class</code> which runs all
 *       available tests:
 *     <pre>
 *       java -cp "jar/thisjarfile.jar;lib/junit.jar" com.jrefinery.report.ext.junit.TestAll
 *     </pre>
 *   </li>
 *   <li>But the most prefered way is to run all tests from
 *     <em>Ant</em> just after compilation process finished.<br/>
 *     To do it. You need:
 *     <ol>
 *       <li>Ant package from
 *         <a href="http://jakarta.apache.org/">Ant</a>
 *       </li>
 *       <li>JUnit package from
 *         <a href="http://www.junit.org/">JUnit</a>
 *       </li>
 *       <li>Put some code in your <code>build.xml</code> file
 *         to tell Ant how to test your package. Sample code for
 *         Ant's <code>build.xml</code> you can find in created file:
 *         <code>sample-junit-build.xml</code>. And remember to have
 *         <code>junit.jar</code> in CLASSPATH <b>before</b> you run Ant.
 *         To generate reports by ant you must have <code>xalan.jar</code>
 *         in your <code>ANT_HOME/lib/</code> directory.
 *       </li>
 *     </ol>
 *   </li>
 * </ul>
 */
public class ReportProcessorTestCase extends TestCase
{
  /**
   * Instance of tested class.
   */
  protected OutputTarget output;
  protected PageFormat defaultPageFormat;

  /**
   * Public constructor for creating testing class.
   */
  public ReportProcessorTestCase (String name)
  {
    super (name);
  } // end of ReportProcessorTestCase(String name)

  /**
   * This main method is used for run tests for this class only
   * from command line.
   */
  public static void main (String[] args)
  {
    junit.textui.TestRunner.run (suite ());
  } // end of main(Stringp[] args)

  /**
   * This method is called every time before particular test execution.
   * It creates new instance of tested class and it can perform some more
   * actions which are necessary for performs tests.
   */
  protected void setUp ()
  {
    // Initialize your variable(s) here
    // for example:
    output = new G2OutputTarget (G2OutputTarget.createEmptyGraphics (), JunitTestLib.getA5Format ());
    // But note that there is no default constructor in ReportProcessor
  } // end of setUp()

  /**
   * Returns all tests which should be performed for testing class.
   * By default it returns only name of testing class. Instance of this
   * is then created with its constructor.
   */
  public static Test suite ()
  {
    return new TestSuite (ReportProcessorTestCase.class);
  } // end of suite()


  /**
   * Method for testing how works original method:
   * boolean isPageDone()
   * from tested class
   */
  public void testIsPageDone ()
  {

    ReportProcessor prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    prc.setPageDone ();
    assertTrue ("First Case", prc.isPageDone () == true);

    prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    ItemBand ib = new ItemBand ();
    ib.setHeight (600);
    prc.printItemBand (ib);
    assertTrue ("2nd Case", prc.isPageDone () == true);

    prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    ib = new ItemBand ();
    ib.setHeight (6);
    prc.printItemBand (ib);
    assertTrue ("3rd Case", prc.isPageDone () == false);

    prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    ib = new ItemBand ();
    ib.setHeight (600);
    prc.isSpaceFor (ib);
    assertTrue ("4th Case", prc.isPageDone () == true);
  } // end of testIsPageDone()

  /**
   * Method for testing how works original method:
   * boolean isSpaceFor(com.jrefinery.report.Band)
   * from tested class
   */
  public void testIsSpaceFor290237458 ()
  {

    ReportProcessor prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    ItemBand ib = new ItemBand ();
    assertTrue (prc.isSpaceFor (ib) == true);

    prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    ib = new ItemBand ();
    ib.setHeight (600);
    assertTrue (prc.isSpaceFor (ib) == false);

  } // end of testIsSpaceFor290237458(com.jrefinery.report.Band)

  /**
   * Method for testing how works original method:
   * void printGroupFooter(com.jrefinery.report.GroupFooter)
   * from tested class
   */
  public void testPrintGroupFooter147000195 ()
  {

    ReportProcessor prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    GroupFooter ib = new GroupFooter ();
    ib.setHeight (10);
    prc.printGroupFooter (ib);
  } // end of testPrintGroupFooter147000195(com.jrefinery.report.GroupFooter)

  /**
   * Method for testing how works original method:
   * void printGroupHeader(com.jrefinery.report.GroupHeader)
   * from tested class
   */
  public void testPrintGroupHeader99409553 ()
  {

    ReportProcessor prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    GroupHeader ib = new GroupHeader ();
    ib.setHeight (10);
    prc.printGroupHeader (ib);

  } // end of testPrintGroupHeader99409553(com.jrefinery.report.GroupHeader)

  /**
   * Method for testing how works original method:
   * void printItemBand(com.jrefinery.report.ItemBand)
   * from tested class
   */
  public void testPrintItemBand1181375675 ()
  {

    ReportProcessor prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    ItemBand ib = new ItemBand ();
    ib.setHeight (10);
    prc.printItemBand (ib);

  } // end of testPrintItemBand1181375675(com.jrefinery.report.ItemBand)

  /**
   * Method for testing how works original method:
   * void printPageFooter(com.jrefinery.report.PageFooter)
   * from tested class
   */
  public void testPrintPageFooter2016302809 ()
  {

    ReportProcessor prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    PageFooter ib = new PageFooter ();
    ib.setHeight (10);
    prc.printPageFooter (ib);

  } // end of testPrintPageFooter2016302809(com.jrefinery.report.PageFooter)

  /**
   * Method for testing how works original method:
   * void printPageHeader(com.jrefinery.report.PageHeader)
   * from tested class
   */
  public void testPrintPageHeader1968712167 ()
  {

    ReportProcessor prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    PageHeader ib = new PageHeader ();
    ib.setHeight (10);
    prc.printPageHeader (ib);

  } // end of testPrintPageHeader1968712167(com.jrefinery.report.PageHeader)

  /**
   * Method for testing how works original method:
   * void printReportFooter(com.jrefinery.report.ReportFooter)
   * from tested class
   */
  public void testPrintReportFooter993900748 ()
  {

    ReportProcessor prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    ReportFooter ib = new ReportFooter ();
    ib.setHeight (10);
    prc.printReportFooter (ib);

  } // end of testPrintReportFooter993900748(com.jrefinery.report.ReportFooter)

  /**
   * Method for testing how works original method:
   * void printReportHeader(com.jrefinery.report.ReportHeader)
   * from tested class
   */
  public void testPrintReportHeader1041491390 ()
  {

    ReportProcessor prc = new ReportProcessor (output, false, new PageFooter ());
    assertTrue (prc.isPageDone () == false);
    ReportHeader ib = new ReportHeader ();
    ib.setHeight (10);
    prc.printReportHeader (ib);

  } // end of testPrintReportHeader1041491390(com.jrefinery.report.ReportHeader)

} // end of ReportProcessorTestCase
