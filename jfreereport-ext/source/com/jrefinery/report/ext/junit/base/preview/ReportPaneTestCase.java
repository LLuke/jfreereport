/*
 * File is generated by 'Unit Tests Generator' developed under
 * 'Web Test Tools' project at http://sf.net/projects/wttools/
 * Copyright (C) 2001 "Artur Hefczyc" <kobit@users.sourceforge.net>
 * to all 'Web Test Tools' subprojects.
 *
 * No rigths to files and no responsibility for code generated
 * by this tool are belonged to author of 'unittestsgen' utility.
 *
 * $Id:$
 * $Author:$
 * $Date:$
 */
package com.jrefinery.report.ext.junit.base.preview;

import junit.framework.*;
import junit.extensions.*;
import java.awt.Toolkit;
import java.awt.AWTEvent;
import java.awt.event.AWTEventListener;
import java.awt.event.WindowEvent;

import com.jrefinery.report.preview.ReportPane;

/**
 * File <code>ReportPaneTestCase.java</code> is automaticaly generated by
 * 'unittestsgen' application. Code generator is created for java
 * sources and for 'junit' package by "Artur Hefczyc"
 * <kobit@users.sourceforge.net><br/>
 * You should fulfil test methods with proper code for testing
 * purpose. All methods where you should put your code are below and
 * their names starts with 'test'.<br/>
 * You can run unit tests in many ways, however prefered are:
 * <ul>
 *   <li>Run tests for one class only, for example for this class you
 *       can run tests with command:
 *     <pre>
 *       java -cp "jar/thisjarfile.jar;lib/junit.jar" com.jrefinery.report.preview.ReportPaneTestCase
 *     </pre>
 *   </li>
 *   <li>Run tests for all classes in one command call. Code generator
 *       creates also <code>com.jrefinery.report.ext.junit.TestAll.class</code> which runs all
 *       available tests:
 *     <pre>
 *       java -cp "jar/thisjarfile.jar;lib/junit.jar" com.jrefinery.report.ext.junit.TestAll
 *     </pre>
 *   </li>
 *   <li>But the most prefered way is to run all tests from
 *     <em>Ant</em> just after compilation process finished.<br/>
 *     To do it. You need:
 *     <ol>
 *       <li>Ant package from
 *         <a href="http://jakarta.apache.org/">Ant</a>
 *       </li>
 *       <li>JUnit package from
 *         <a href="http://www.junit.org/">JUnit</a>
 *       </li>
 *       <li>Put some code in your <code>build.xml</code> file
 *         to tell Ant how to test your package. Sample code for
 *         Ant's <code>build.xml</code> you can find in created file:
 *         <code>sample-junit-build.xml</code>. And remember to have
 *         <code>junit.jar</code> in CLASSPATH <b>before</b> you run Ant.
 *         To generate reports by ant you must have <code>xalan.jar</code>
 *         in your <code>ANT_HOME/lib/</code> directory.
 *       </li>
 *     </ol>
 *   </li>
 * </ul>
 */
public class ReportPaneTestCase extends TestCase
{
  /**
   * Instance of tested class.
   */
  protected ReportPane varReportPane;

  /**
   * Public constructor for creating testing class.
   */
  public ReportPaneTestCase(String name) {
    super(name);
  } // end of ReportPaneTestCase(String name)
  /**
   * This main method is used for run tests for this class only
   * from command line.
   */
  public static void main(String[] args) {
    junit.textui.TestRunner.run(suite());
  } // end of main(Stringp[] args)
  /**
   * This method is called every time before particular test execution.
   * It creates new instance of tested class and it can perform some more
   * actions which are necessary for performs tests.
   */
  protected void setUp() {
    // Initialize your variable(s) here
    // for example:
    // varReportPane = new ReportPane(...);
    // But note that there is no default constructor in ReportPane
  } // end of setUp()
  /**
   * Returns all tests which should be performed for testing class.
   * By default it returns only name of testing class. Instance of this
   * is then created with its constructor.
   */
  public static Test suite() {
    return new TestSuite(ReportPaneTestCase.class);
  } // end of suite()
  /**
   * for classes which doesn't contain any methods here is one additional
   * method for performing test on such classes.
   */
  public void testNoMethods() {
  }

  /**
   * Method for testing how works original method:
   * void clearError()
   * from tested class
   */
  public void testClearError() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testClearError()

  /**
   * Method for testing how works original method:
   * java.lang.Exception getError()
   * from tested class
   */
  public void testGetError() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testGetError()

  /**
   * Method for testing how works original method:
   * java.awt.Dimension getMinimumSize()
   * from tested class
   */
  public void testGetMinimumSize() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testGetMinimumSize()

  /**
   * Method for testing how works original method:
   * int getNumberOfPages()
   * from tested class
   */
  public void testGetNumberOfPages() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testGetNumberOfPages()

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.targets.G2OutputTarget getOutputTarget()
   * from tested class
   */
  public void testGetOutputTarget() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testGetOutputTarget()

  /**
   * Method for testing how works original method:
   * java.awt.print.PageFormat getPageFormat(int)
   * from tested class
   */
  public void testGetPageFormat104431() {

/* No default constructor, code commented out...
    // Hint: in get/set pair 'get' method should _not_ have any parameters
    //       and should return java.awt.print.PageFormat as a value.

*/
    assertTrue("Warning! This new test method with no real test code inside.", false);
/* No default constructor, code commented out...
    // Hint: in get/set pair 'get' method should _not_ have any parameters
    //       and should return java.awt.print.PageFormat as a value.

*/

  } // end of testGetPageFormat104431(int)

  /**
   * Method for testing how works original method:
   * java.awt.print.PageFormat getPageFormat()
   * from tested class
   */
  public void testGetPageFormat() {

/* No default constructor, code commented out...
    // Hint: in get/set pair 'get' method should _not_ have any parameters
    //       and should return java.awt.print.PageFormat as a value.

*/
    assertTrue("Warning! This new test method with no real test code inside.", false);
/* No default constructor, code commented out...
    // Hint: in get/set pair 'get' method should _not_ have any parameters
    //       and should return java.awt.print.PageFormat as a value.

*/

  } // end of testGetPageFormat()

  /**
   * Method for testing how works original method:
   * int getPageNumber()
   * from tested class
   */
  public void testGetPageNumber() {

/* No default constructor, code commented out...
    varReportPane.setPageNumber((int)-2147483648);
    assertEquals((int)-2147483648, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)-1);
    assertEquals((int)-1, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)0);
    assertEquals((int)0, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)1);
    assertEquals((int)1, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)2147483647);
    assertEquals((int)2147483647, varReportPane.getPageNumber());
*/
    assertTrue("Warning! This new test method with no real test code inside.", false);
/* No default constructor, code commented out...
    varReportPane.setPageNumber((int)-2147483648);
    assertEquals((int)-2147483648, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)-1);
    assertEquals((int)-1, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)0);
    assertEquals((int)0, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)1);
    assertEquals((int)1, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)2147483647);
    assertEquals((int)2147483647, varReportPane.getPageNumber());
*/

  } // end of testGetPageNumber()

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.ReportStateList getPageStateList()
   * from tested class
   */
  public void testGetPageStateList() {

/* No default constructor, code commented out...
    varReportPane.setPageStateList((com.jrefinery.report.ReportStateList)null);
    assertEquals((com.jrefinery.report.ReportStateList)null, varReportPane.getPageStateList());
*/
    assertTrue("Warning! This new test method with no real test code inside.", false);
/* No default constructor, code commented out...
    varReportPane.setPageStateList((com.jrefinery.report.ReportStateList)null);
    assertEquals((com.jrefinery.report.ReportStateList)null, varReportPane.getPageStateList());
*/

  } // end of testGetPageStateList()

  /**
   * Method for testing how works original method:
   * java.awt.Dimension getPreferredSize()
   * from tested class
   */
  public void testGetPreferredSize() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testGetPreferredSize()

  /**
   * Method for testing how works original method:
   * java.awt.print.Printable getPrintable(int)
   * from tested class
   */
  public void testGetPrintable104431() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testGetPrintable104431(int)

  /**
   * Method for testing how works original method:
   * com.jrefinery.report.JFreeReport getReport()
   * from tested class
   */
  public void testGetReport() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testGetReport()

  /**
   * Method for testing how works original method:
   * boolean hasError()
   * from tested class
   */
  public void testHasError() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testHasError()

  /**
   * Method for testing how works original method:
   * boolean isBorderPainted()
   * from tested class
   */
  public void testIsBorderPainted() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testIsBorderPainted()

  /**
   * Method for testing how works original method:
   * boolean isPaginated()
   * from tested class
   */
  public void testIsPaginated() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testIsPaginated()

  /**
   * Method for testing how works original method:
   * boolean isPaginating()
   * from tested class
   */
  public void testIsPaginating() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testIsPaginating()

  /**
   * Method for testing how works original method:
   * void paintComponent(java.awt.Graphics)
   * from tested class
   */
  public void testPaintComponent979340263() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testPaintComponent979340263(java.awt.Graphics)

  /**
   * Method for testing how works original method:
   * int print( ... )
   * from tested class
   */
  public void testPrint9793402631429744291104431() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testPrint9793402631429744291104431( ... )

  /**
   * Method for testing how works original method:
   * void repaginate( ... )
   * from tested class
   */
  public void testRepaginate320600891() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testRepaginate320600891( ... )

  /**
   * Method for testing how works original method:
   * void setBorderPainted(boolean)
   * from tested class
   */
  public void testSetBorderPainted64711720() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testSetBorderPainted64711720(boolean)

  /**
   * Method for testing how works original method:
   * void setPageFormat(java.awt.print.PageFormat)
   * from tested class
   */
  public void testSetPageFormat1429744291() {

/* No default constructor, code commented out...
    // Hint: in get/set pair 'get' method should _not_ have any parameters
    //       and should return java.awt.print.PageFormat as a value.

*/
    assertTrue("Warning! This new test method with no real test code inside.", false);
/* No default constructor, code commented out...
    // Hint: in get/set pair 'get' method should _not_ have any parameters
    //       and should return java.awt.print.PageFormat as a value.

*/

  } // end of testSetPageFormat1429744291(java.awt.print.PageFormat)

  /**
   * Method for testing how works original method:
   * void setPageNumber(int)
   * from tested class
   */
  public void testSetPageNumber104431() {

/* No default constructor, code commented out...
    varReportPane.setPageNumber((int)-2147483648);
    assertEquals((int)-2147483648, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)-1);
    assertEquals((int)-1, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)0);
    assertEquals((int)0, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)1);
    assertEquals((int)1, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)2147483647);
    assertEquals((int)2147483647, varReportPane.getPageNumber());
*/
    assertTrue("Warning! This new test method with no real test code inside.", false);
/* No default constructor, code commented out...
    varReportPane.setPageNumber((int)-2147483648);
    assertEquals((int)-2147483648, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)-1);
    assertEquals((int)-1, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)0);
    assertEquals((int)0, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)1);
    assertEquals((int)1, varReportPane.getPageNumber());
    varReportPane.setPageNumber((int)2147483647);
    assertEquals((int)2147483647, varReportPane.getPageNumber());
*/

  } // end of testSetPageNumber104431(int)

  /**
   * Method for testing how works original method:
   * void setPageStateList(com.jrefinery.report.ReportStateList)
   * from tested class
   */
  public void testSetPageStateList1646486530() {

/* No default constructor, code commented out...
    varReportPane.setPageStateList((com.jrefinery.report.ReportStateList)null);
    assertEquals((com.jrefinery.report.ReportStateList)null, varReportPane.getPageStateList());
*/
    assertTrue("Warning! This new test method with no real test code inside.", false);
/* No default constructor, code commented out...
    varReportPane.setPageStateList((com.jrefinery.report.ReportStateList)null);
    assertEquals((com.jrefinery.report.ReportStateList)null, varReportPane.getPageStateList());
*/

  } // end of testSetPageStateList1646486530(com.jrefinery.report.ReportStateList)

  /**
   * Method for testing how works original method:
   * void setZoomFactor(double)
   * from tested class
   */
  public void testSetZoomFactor1325958191() {

    assertTrue("Warning! This new test method with no real test code inside.", false);

  } // end of testSetZoomFactor1325958191(double)

} // end of ReportPaneTestCase
