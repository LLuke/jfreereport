/**
 * ===========================================
 * LibLayout : a free Java layouting library
 * ===========================================
 *
 * Project Info:  http://www.jfree.org/liblayout/
 * Project Lead:  Thomas Morgner;
 *
 * (C) Copyright 2000-2005, by Object Refinery Limited and Contributors.
 *
 * This library is free software; you can redistribute it and/or modify it under the terms
 * of the GNU Lesser General Public License as published by the Free Software Foundation;
 * either version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with this
 * library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307, USA.
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
 * in the United States and other countries.]
 *
 * ------------
 * ContentNode.java
 * ------------
 * (C) Copyright 2006, by Pentaho Corporation.
 *
 * Original Author:  Thomas Morgner;
 * Contributor(s):   -;
 *
 * $Id: ContentNode.java,v 1.1 2006/04/17 21:04:27 taqua Exp $
 *
 * Changes
 * -------
 *
 *
 */
package org.jfree.layouting.normalizer.common.display;

import org.jfree.layouting.input.style.keys.box.DisplayRole;
import org.jfree.layouting.model.LayoutNode;
import org.jfree.layouting.normalizer.common.display.ContentBox;

/**
 * A primitive element in the layouting process.
 *
 * @author Thomas Morgner
 */
public abstract class ContentNode implements Cloneable
{
  public static final int BLOCK = 0;
  public static final int INLINE = 1;

  private ContentBox parent;
  private LayoutNode layoutElement;

  /**
   * The layout element can be null, in case the content element has been autogenerated.
   *
   * @param layoutElement
   */
  public ContentNode (final LayoutNode layoutElement)
  {
    this.layoutElement = layoutElement;
  }

  public LayoutNode getLayoutElement ()
  {
    return layoutElement;
  }

  public ContentBox getParent ()
  {
    return parent;
  }

  public void setParent (final ContentBox parent)
  {
    this.parent = parent;
  }

  public Object clone ()
          throws CloneNotSupportedException
  {
    return super.clone();
  }

  /**
   * Is a enum in the real world ..
   *
   * @return the display role for this element.
   */
  public abstract DisplayRole getDisplayRole ();


  public boolean isLayoutable ()
  {
    if (parent != null)
    {
      return parent.isLayoutable();
    }
    return true;
  }

  public ContentRoot getRoot ()
  {
    if (parent == null) return null;
    return parent.getRoot();
  }
}
