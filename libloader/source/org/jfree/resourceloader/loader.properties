#
# The list of known storage handlers. These classes are responsible to get
# the binary data into the system. They do not interpret that data in any
# way.
org.jfree.resourceloader.loader.file=org.jfree.resourceloader.loader.file.FileResourceLoader
org.jfree.resourceloader.loader.ftp=org.jfree.resourceloader.loader.ftp.FtpResourceLoader
org.jfree.resourceloader.loader.http=org.jfree.resourceloader.loader.http.HttpResourceLoader
org.jfree.resourceloader.loader.https=org.jfree.resourceloader.loader.http.HttpsResourceLoader
org.jfree.resourceloader.loader.raw=org.jfree.resourceloader.loader.raw.RawResourceLoader
org.jfree.resourceloader.loader.res=org.jfree.resourceloader.loader.resource.ClassloaderResourceLoader
org.jfree.resourceloader.loader.zip=org.jfree.resourceloader.loader.ftp.FtpResourceLoader

#
# The cache stuff. For now, this only defines *that* there are caches.
# The implementation and initialization is part of the module's reponsibility

#
# Using no real caching ..
#org.jfree.resourceloader.cache.FactoryCacheProvider=org.jfree.resourceloader.cache.NullCacheProvider
#org.jfree.resourceloader.cache.DataCacheProvider=org.jfree.resourceloader.cache.NullCacheProvider

#
# Using OSCache ... (if this is not available, it falls back to the 'NoCacheProvider'
org.jfree.resourceloader.cache.FactoryCacheProvider=org.jfree.resourceloader.modules.cache.oscache.OSCacheProvider
org.jfree.resourceloader.cache.DataCacheProvider=org.jfree.resourceloader.modules.cache.oscache.OSCacheProvider


# The heart of the system are the value factories. They translate binary
# content into usable java objects.
#
# The key format is:
# org.jfree.resourceloader.factory.type.<java-FQ-classname>=<factory-implementation-class>
org.jfree.resourceloader.factory.type.java.awt.Image=org.jfree.resourceloader.factory.image.ImageResourceFactory
org.jfree.resourceloader.factory.type.org.jfree.ui.Drawable=org.jfree.resourceloader.factory.drawable.DrawableResourceFactory
org.jfree.resourceloader.factory.type.java.util.Properties=org.jfree.resourceloader.factory.property.PropertyResourceFactory

#
# The factory modules are responsible for loading a certain sub-format. The
# factory implementation tries to find the most suitable module for the given
# content.
#
# The key format is:
# org.jfree.resourceloader.factory.modules.<java-FQ-classname>.<unique-key>=<module-implementation-class>
org.jfree.resourceloader.factory.modules.java.awt.Image.gif=org.jfree.resourceloader.factory.image.GIFImageFactoryModule
org.jfree.resourceloader.factory.modules.java.awt.Image.png=org.jfree.resourceloader.factory.image.PNGImageFactoryModule
org.jfree.resourceloader.factory.modules.java.awt.Image.jpeg=org.jfree.resourceloader.factory.image.JPEGImageFactoryModule

