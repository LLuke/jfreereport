*********************
* JFREEREPORT 0.8.1 *
*********************

28 February 2003

1. INTRODUCTION
---------------
JFreeReport is a free Java report library, distributed under the terms
of the GNU Lesser General Public License (see license-LGPL.txt for
details).  JFreeReport is developed by Thomas Morgner, David Gilbert
and others.

For the latest news and information about JFreeReport, please refer to:

    http://www.object-refinery.com/jfreereport/index.html


2. INSTALLATION
---------------
Detailed instructions for installing JFreeReport are provided in the
jfreechart-install.pdf file.  You can download this file from the
JFreeReport home page. 


3. OTHER LIBRARIES
------------------
JFreeReport uses several other open source libraries:

JCommon - http://www.object-refinery.com/jcommon/index.html
BeanShell - http://www.beanshell.org
GnuJAXP - http://www.gnu.org/software/classpathx/jaxp
iText - http://www.lowagie.com/iText
POI - http://jakarta.apache.org/poi
JUnit - http://www.junit.org


4. JAVADOC HTML PAGES
---------------------
The Javadoc HTML pages for JFreeReport are available on-line at the
JFreeReport home page.  You can also regenerate the Javadocs directly
from the source code.  There is a task in the Ant script (see below)
that makes this relatively simple.


5. EXTENDED XML DEFINITION REFERENCE DOCUMENTS
----------------------------------------------
The reference documents for the extended report definition format can
be found in the resources directory or can be generated by starting the
java class

  com.jrefinery.report.io.ext.ReferenceDocGenerator

The reference manual documents all currently defined StyleKeys and
the object definitions used in the stylekeys and when defining
templates or datasources.


6. SUPPORT
----------
Free support is available via the JFreeReport forum, follow the link
from the JFreeReport home page.  Please note that questions are
answered by volunteers, so there is no guaranteed response time or
level of service.

Please avoid e-mailing the developers directly for support questions.
If you post a message in the forum, then everyone can see the
question, and everyone can see the answer.


7. REPORTING BUGS
-----------------
If you find bugs in JFreeReport, we'd like to hear about it so that we
can improve future releases of JFreeReport.  Please post a bug report
at the JFreeReport project page on SourceForge:

    http://sourceforge.net/projects/jfreereport

Please be sure to provide as much information as you can.  We need to
know the version of JFreeReport that you are using, the JDK version,
and the steps required to replicate the bug.  Include any other
information that you think is relevant.


8. ANT
------
We use an open source build tool called Ant to build JFreeReport.  An
Ant script (tested using Ant 1.5.1) is included in the distribution:

    <jfreereport-directory>/ant/build.xml

You can find out more about Ant at:

    http://jakarta.apache.org/ant

Ant is licensed under the terms of the Apache Software License (a
popular open source software license).


9. CHECKSTYLE
-------------
We use a free utility called Checkstyle to apply a consistent coding
style to the JFreeReport source code.  You will find the Checkstyle
property settings in the following file:

    <jfreereport-directory>/checkstyle/properties.txt

You can find out more about Checkstyle at:

    http://checkstyle.sourceforge.net/

Checkstyle is licensed under the terms of the GNU LGPL.


10. TABLE-BASED OUTPUTTARGETS AND PLAINTEXT-OUTPUT
-------------------------------------------------

All table based output targets (HTML, Execl, Layouted CSV) have some
layout restrictions. These layout restrictions also apply to the
PlainText output target:

* The elements must be aligned properly, they must not overlap. When
  overlapping, the left element gets preferred over the right element,
  and top elements have a higher preferrence level as bottom elements.

* The elements must be large enough to contain the element. This is
  important when specifying the cell/line height, the elements height
  must be greater than the minimum height.

  For Excel/Html cells the minimum height is equal to the font height,
  so you'll just have to make sure that the cell is able to print at
  least one line of text.

  For PlainText, the line height is defined by the LPI setting, if LPI
  (lines per inch) is set to 10, then the minimum height of a line
  should be 72/10 points, so specifying a element height of 8 is safe.
  If LPI is set to 6, then the line height should be at least 72/6, so
  a element height of 12 should be ok.

* When specifying colors for the Excel target, then these colors are
  translated into one of the predefined excel color constants. This
  translation tries to find the nearest color, if that fails, the colors
  could look weird. Using one of the predefined AWT colors is always safe,
  everything else should work, but there are no guarantees.


11. OTHER FEEDBACK
-----------------
For other feedback and comments, please post a message on the
JFreeReport forum.
