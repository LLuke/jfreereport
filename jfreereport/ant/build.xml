<!-- An ANT build file for JFreeReport -->

<!-- Written by David Gilbert. -->
<!-- 12-Nov-2002 -->

<!-- To run this script, you need to make sure the libraries used by -->
<!-- JFreeReport are copied to the ../lib directory (or edit the -->
<!-- init-general task to point to the appropriate jar files). -->

<!-- This script will create temporary directories ../build and -->
<!-- ../distribution, as working areas.  A ../javadoc directory will -->
<!-- be created for the Javadoc HTML pages. -->

<!-- If you have comments about this script, please post a message -->
<!-- in the JFreeReport forum. -->

<project name="jfreereport" default="all">

    <!-- Read the latest sources from the CVS -->
    <target name="cvs-checkout" description="Retrieves the latest sources from the cvs archive at sourceforge.">
      <property name="basedir" value="." />
      <cvspass cvsroot=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/jfreereport"
             password=""
        />
      <cvs cvsRoot=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/jfreereport"
           package="jfreereport"
           compression="true" compressionlevel="5"
           dest="."
        />
    </target>

    <!-- General initialisation. -->
    <target name="init-general" description="Initialise general parameters.">
        <tstamp />
        <!-- BaseDirectory is different for either cvs target and build target -->
        <property name="basedir" value=".." />
        <property name="builddir" value="${basedir}/build" />
        <property name="libdir" value="${basedir}/lib" />
        <property name="BeanShell-jar" value="$bsh-1.2b6.jar" />
        <property name="GnuJAXP-jar" value="$gnujaxp.jar" />
        <property name="iText-jar" value="$iText-0.96.jar" />
        <property name="JCommon-jar" value="$jcommon-0.7.1.jar" />
        <property name="Pixie-jar" value="pixie.jar" />
        <property name="POI-jar" value="jakarta-poi-1.5.1-final-20020615.jar" />

        <path id="build.classpath">
            <pathelement location="${libdir}/${BeanShell-jar}" />
            <pathelement location="${libdir}/${GnuJAXP-jar}" />
            <pathelement location="${libdir}/${iText-jar}" />
            <pathelement location="${libdir}/${JCommon-jar}" />
            <pathelement location="${libdir}/${Pixie-jar}" />
            <pathelement location="${libdir}/${POI-jar}" />
        </path>

    </target>

    <!-- JFreeReport initialisation. -->
    <target name="init-jfreereport" depends="init-general"
            description="Initialise JFreeReport parameters.">
        <property name="jfreereport.name" value="jfreereport" />
        <property name="jfreereport.version" value="0.8.1" />
    </target>

    <!-- Compile the JFreeReport classes -->
    <target name="compile-jfreereport" depends="init-jfreereport"
            description="Compile the JFreeReport source code.">

        <!-- create a temp build directory -->
        <mkdir dir="${basedir}/build" />

        <!-- compile the source -->
        <javac srcdir="${basedir}/source" 
               destdir="${basedir}/build"
               excludes="com/jrefinery/report/demo/**">
            <classpath refid="build.classpath" />
        </javac>

        <!-- copy across the BeanShell header file -->
        <copy file="${basedir}/source/com/jrefinery/report/function/BSHExpressionHeader.txt"
          tofile="${basedir}/build/com/jrefinery/report/function/BSHExpressionHeader.txt" />

        <!-- include the jfreereport.properties -->
        <copy file="${basedir}/source/com/jrefinery/report/jfreereport.properties"
          tofile="${basedir}/build/com/jrefinery/report/jfreereport.properties" />

        <!-- copy across the icons -->
        <copy todir="${basedir}/build/com/jrefinery/report/resources">
            <fileset dir="${basedir}/source/com/jrefinery/report/resources">
                <include name="**/*.gif" />
            </fileset>
        </copy>

        <!-- make the jar -->
        <jar jarfile="${basedir}/${jfreereport.name}-${jfreereport.version}.jar"
             basedir="${basedir}/build" />

        <!-- delete the temp directory -->
        <delete dir="${basedir}/build" />
    </target>

    <!-- Compile the JFreeReport DEMO classes -->
    <!-- This target creates a jar file containing all demo classes. -->
    <!-- The core classes are contained in the JFreeReport jar. -->
    <target name="compile-jfreereport-demo" depends="compile-jfreereport"
            description="Compile the JFreeReport demo source code.">

        <!-- create a temporary build directory -->
        <delete dir="${basedir}/build" />
        <mkdir dir="${basedir}/build" />

        <!-- compile the demo source -->
        <javac srcdir="${basedir}/source/com/jrefinery/report/demo" 
               destdir="${basedir}/build"
	       sourcepath="${basedir}/source">
            <classpath refid="build.classpath" />
        </javac>

        <!-- include the report definition files -->
        <copy todir="${basedir}/build/com/jrefinery/report/demo">
            <fileset dir="${basedir}/source/com/jrefinery/report/demo">
                <include name="**/*.xml" />
            </fileset>
        </copy>

        <!-- include the butterfly image file -->
        <copy file="${basedir}/source/com/jrefinery/report/demo/anim0002.wmf" tofile="${basedir}/build/com/jrefinery/report/demo/anim0002.wmf" />

	      <!-- make the jar file -->
        <jar jarfile="${basedir}/${jfreereport.name}-${jfreereport.version}-demo.jar"
             basedir="${basedir}/build"
	           includes="com/jrefinery/report/demo/**">
            <manifest>
                <attribute name="Main-Class" value="com.jrefinery.report.demo.JFreeReportDemo" />
                <attribute name="Class-Path"
                  value="${jfreereport.name}-${jfreereport.version}.jar lib/${BeanShell-jar} lib/${GnuJAXP-jar} lib/${iText-jar} lib/${JCommon-jar} lib/${Pixie-jar} lib/${POI-jar}"/>
            </manifest> 
        </jar>
        
        <!-- remove the temp build area -->
        <delete dir="${basedir}/build" />
    </target>

    <!-- Generate the JFreeReport JavaDoc HTML pages -->
    <target name="javadoc-jfreereport" depends="init-jfreereport">
        <delete dir="${basedir}/javadoc" />
        <mkdir dir="${basedir}/javadoc" />
        <javadoc destdir="${basedir}/javadoc" 
                 windowtitle="JFreeReport Class Library">
            <classpath refid="build.classpath" />
            <packageset dir="${basedir}/source" defaultexcludes="yes">
                <include name="com/jrefinery/report/**" />
                <exclude name="com/jrefinery/report/demo/**" />  
            </packageset>
        </javadoc>
    </target>

    <!-- Make .zip distribution for JFreeReport -->
    <target name="make-jfreereport-zip" depends="compile-jfreereport-demo">

        <!-- make a temporary distribution directory -->
        <mkdir dir="${basedir}/distribution" />

        <!-- copy across README -->
        <copy file="${basedir}/README" tofile="${basedir}/distribution/README" />

        <!-- copy across ChangeLog -->
        <copy file="${basedir}/ChangeLog" tofile="${basedir}/distribution/ChangeLog" />

        <!-- copy across LICENCE -->
        <copy file="${basedir}/licence-LGPL.txt" tofile="${basedir}/distribution/licence-LGPL.txt" />

        <!-- copy across migration.txt -->
        <copy file="${basedir}/migration.txt" tofile="${basedir}/distribution/migration.txt" />

        <!-- copy across runtime jar file and demo jar file -->
        <copy file="${basedir}/${jfreereport.name}-${jfreereport.version}.jar" tofile="${basedir}/distribution/${jfreereport.name}-${jfreereport.version}.jar" />
        <copy file="${basedir}/${jfreereport.name}-${jfreereport.version}-demo.jar" tofile="${basedir}/distribution/${jfreereport.name}-${jfreereport.version}-demo.jar" />
    
        <!-- copy across source files -->
        <copy todir="${basedir}/distribution/source">
            <fileset dir="${basedir}/source" />
        </copy>

        <!-- copy across resource files (DTD and example PDFs) -->
        <copy todir="${basedir}/distribution/resource">
            <fileset dir="${basedir}/resource" />
        </copy>

        <!-- copy across lib files -->
        <copy todir="${basedir}/distribution/lib">
            <fileset dir="${basedir}/lib" />
        </copy>

        <!-- copy across ant build file (this file) -->
        <copy todir="${basedir}/distribution/ant">
            <fileset dir="${basedir}/ant" />
        </copy>

        <!-- copy across checkstyle property file -->
        <copy todir="${basedir}/distribution/checkstyle">
            <fileset dir="${basedir}/checkstyle" />
        </copy>

        <!-- convert end-of-line characters in text files -->
        <fixcrlf srcdir="${basedir}/distribution/source"
                 eol="crlf" eof="add" />

        <!-- make the zip file -->
        <zip zipfile="${basedir}/${jfreereport.name}-${jfreereport.version}.zip">
             <zipfileset dir="${basedir}/distribution"
                         prefix="${jfreereport.name}-${jfreereport.version}" />
        </zip>

        <!-- delete the temporary distribution directory -->
        <delete dir="${basedir}/distribution" />

    </target>

    <!-- Make .tar.gz distribution for JFreeReport -->
    <target name="make-jfreereport-targz" depends="compile-jfreereport-demo">

        <!-- make a temporary distribution directory -->
        <mkdir dir="${basedir}/distribution" />

        <!-- copy across README -->
        <copy file="${basedir}/README" tofile="${basedir}/distribution/README" />

        <!-- copy across ChangeLog -->
        <copy file="${basedir}/ChangeLog" tofile="${basedir}/distribution/ChangeLog" />

        <!-- copy across LICENCE -->
        <copy file="${basedir}/licence-LGPL.txt" tofile="${basedir}/distribution/licence-LGPL.txt" />

        <!-- copy across migration.txt -->
        <copy file="${basedir}/migration.txt" tofile="${basedir}/distribution/migration.txt" />

        <!-- copy across runtime jar file and demo jar file -->
        <copy file="${basedir}/${jfreereport.name}-${jfreereport.version}.jar" tofile="${basedir}/distribution/${jfreereport.name}-${jfreereport.version}.jar" />
        <copy file="${basedir}/${jfreereport.name}-${jfreereport.version}-demo.jar" tofile="${basedir}/distribution/${jfreereport.name}-${jfreereport.version}-demo.jar" />
    
        <!-- copy across source files -->
        <copy todir="${basedir}/distribution/source">
            <fileset dir="${basedir}/source" />
        </copy>

        <!-- copy across resource files (DTD and example PDFs) -->
        <copy todir="${basedir}/distribution/resource">
            <fileset dir="${basedir}/resource" />
        </copy>

        <!-- copy across lib files -->
        <copy todir="${basedir}/distribution/lib">
            <fileset dir="${basedir}/lib" />
        </copy>

        <!-- copy across ant build file (this file) -->
        <copy todir="${basedir}/distribution/ant">
            <fileset dir="${basedir}/ant" />
        </copy>

        <!-- copy across checkstyle property file -->
        <copy todir="${basedir}/distribution/checkstyle">
            <fileset dir="${basedir}/checkstyle" />
        </copy>

        <!-- convert end-of-line characters in text files -->
        <fixcrlf srcdir="${basedir}/distribution/source"
                 eol="lf" eof="add" />

        <!-- make the tar.gz file -->
        <tar tarfile="${basedir}/${jfreereport.name}-${jfreereport.version}.tar">
             <tarfileset dir="${basedir}/distribution"
                         prefix="${jfreereport.name}-${jfreereport.version}" />
        </tar>
        <gzip zipfile="${basedir}/${jfreereport.name}-${jfreereport.version}.tar.gz"   
              src="${basedir}/${jfreereport.name}-${jfreereport.version}.tar" />
        <delete file="${basedir}/${jfreereport.name}-${jfreereport.version}.tar" />

        <!-- delete the temporary distribution directory -->
        <delete dir="${basedir}/distribution" />

    </target>

    <!-- ALL -->
    <target name="all" 
            depends="compile-jfreereport,compile-jfreereport-demo,javadoc-jfreereport,make-jfreereport-zip,make-jfreereport-targz"
            description="Compiles JFreeReport, builds the jar files, generates the Javadoc HTML pages and creates distribution files (.zip and .tar.gz).">
    </target>

    <!-- Checkout the sources from sourceforge and rebuild JFreeReport -->
    <target name="cvs-rebuild"
            depends="cvs-checkout"
            description="Checksout the sources from sourceforge and rebuilds the sources by using the ant-script within the sources">
        <ant antfile="ant/build.xml" dir="jfreereport" target="all"/>
    </target>

</project>
